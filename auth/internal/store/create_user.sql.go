// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: create_user.sql

package store

import (
	"context"
)

const getUser = `-- name: GetUser :one
SELECT uid, email, password, role FROM users
WHERE email = $1
`

func (q *Queries) GetUser(ctx context.Context, email string) (*User, error) {
	row := q.db.QueryRow(ctx, getUser, email)
	var i User
	err := row.Scan(
		&i.Uid,
		&i.Email,
		&i.Password,
		&i.Role,
	)
	return &i, err
}

const insertUser = `-- name: InsertUser :one
INSERT INTO users (email, password, role) VALUES ($1, $2, $3) RETURNING uid
`

type InsertUserParams struct {
	Email    string
	Password string
	Role     string
}

func (q *Queries) InsertUser(ctx context.Context, arg *InsertUserParams) (string, error) {
	row := q.db.QueryRow(ctx, insertUser, arg.Email, arg.Password, arg.Role)
	var uid string
	err := row.Scan(&uid)
	return uid, err
}
